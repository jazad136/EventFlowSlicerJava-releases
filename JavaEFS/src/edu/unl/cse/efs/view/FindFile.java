/*******************************************************************************
 *    Copyright (c) 2018 Jonathan A. Saddler
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 *    
 *    Contributors:
 *     Jonathan A. Saddler - initial API and implementation
 *******************************************************************************/
package edu.unl.cse.efs.view;

import java.awt.Component;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SelectFile.java
 *
 * Created on Jul 12, 2011, 5:08:03 PM
 */

import java.io.File;
import java.io.IOException;

import javax.swing.BoxLayout;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import edu.unl.cse.efs.util.OSDetector;


/**
 *
 * Source for the CogToolHelperSelectFile class. This class aids the user in selecting a file when promted to by 
 * cogtool helper. 
 */
public class FindFile extends javax.swing.JPanel {

	private javax.swing.JFileChooser chooseFile;    	
	public static void main(String[] args)
	{
		JFrame myFrame = new JFrame("The Title");
		java.awt.Dimension w = new java.awt.Dimension(400, 400);
		myFrame.setPreferredSize(w);
		myFrame.pack();
		myFrame.setVisible(true);
		new FindFile().launch(true, myFrame);
	}
	private static final long serialVersionUID = 1L;

	
    public FindFile() {
        initComponents(new File(System.getProperty("user.dir")));
        setLayout(new BoxLayout(this, BoxLayout.PAGE_AXIS));
    }
    
    public FindFile(File defaultDirectory) {
        initComponents(defaultDirectory);
        setLayout(new BoxLayout(this, BoxLayout.PAGE_AXIS));
    }
    public void setDefaultDirectory(File defaultDirectory)
    {
    	removeAll();
    	initComponents(defaultDirectory);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents(File defaultDirectory) {
    	chooseFile = new JFileChooser(defaultDirectory);
        chooseFile.setName("File_Chooser");
//        chooseFile.setName("chooseFile"); // NOI18N
        chooseFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chooseFileMouseClicked(evt);
            }
        });
        chooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileActionPerformed(evt);
            }
        });
        add(chooseFile);
    }// </editor-fold>//GEN-END:initComponents

    private void chooseFileActionPerformed(java.awt.event.ActionEvent evt){}

    private void chooseFileMouseClicked(java.awt.event.MouseEvent evt) {}

    

    /**
     * Launches the file chooser. 
     * @param file - true if selections are limited to files only, false if selections are limited to folders only
     */
    public String launch(boolean file, final Component parent) {

       //Select file or directory
       String label = "";
       if(!file){
           chooseFile.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
           label = "Select Folder";
       }else{
    	   chooseFile.setFileSelectionMode(JFileChooser.FILES_ONLY);
           label = "Select File";
       }

        int res = chooseFile.showDialog(parent, label); // blocks
        if(res==JFileChooser.APPROVE_OPTION) {
            File fileName = chooseFile.getSelectedFile();
            return fileName.getAbsolutePath();
        }
        else
            return ""; 
    }

}
