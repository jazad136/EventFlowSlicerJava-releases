//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.5-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.09.30 at 01:14:03 PM CDT 
//


package edu.umd.cs.guitar.model.data;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import edu.umd.cs.guitar.model.GUITARConstants;
import edu.umd.cs.guitar.model.wrapper.ComponentTypeWrapper;


/**
 * <p>Java class for ContainerType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ContainerType">
 *   &lt;complexContent>
 *     &lt;extension base="{}ComponentType">
 *       &lt;sequence>
 *         &lt;element name="Contents" type="{}ContentsType"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ContainerType", propOrder = {
    "contents"
})
public class ContainerType extends ComponentType
{

    @XmlElement(name = "Contents", required = true)
    protected ContentsType contents;

    /**
     * Gets the value of the contents property.
     * 
     * @return
     *     possible object is
     *     {@link ContentsType }
     *     
     */
    public ContentsType getContents() {
        return contents;
    }

    /**
     * Sets the value of the contents property.
     * 
     * @param value
     *     allowed object is
     *     {@link ContentsType }
     *     
     */
    public void setContents(ContentsType value) {
        this.contents = value;
    }
    
    public String toString()
    {
    	String toReturn = super.toString();
    	if(contents != null) {
    		toReturn += "\nCONTENTS:" + (!contents.getWidgetOrContainer().isEmpty() ? " (non-empty)" : "");
    		
    		for(ComponentType child : contents.getWidgetOrContainer()) {
    			if(child != null) {
	    			ComponentTypeWrapper ctw = new ComponentTypeWrapper(this);
	        		String title = ctw.getFirstValueByName(GUITARConstants.CLASS_TAG_NAME);
	        		if(title != null && !title.isEmpty()) 
	        			toReturn += "\n" + title;
    			}
    		}
    	}
    	return toReturn;
    }

}
